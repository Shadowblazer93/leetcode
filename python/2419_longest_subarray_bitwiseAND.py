def longestSubarray(nums):
    #len_s = 1
    #bitand = max(nums)
    #for i in range(len(nums)-1):
    #    if nums[i]==bitand and nums[i+1]==nums[i] and nums[min(i+len_s,len(nums)-1)]==nums[i]:
    #        c=1
    #        for k in range(i+1,len(nums)):
    #            if nums[k]!=nums[k-1]: break
    #            else: c+=1
    #        len_s = max(len_s,c)
    #        
    #return len_s

    val = max(nums)
    i = j = res = 0
    while j < len(nums):
        if nums[j] == val:
            while j < len(nums) and nums[j] == val: j += 1
            
            res = max(res, j - i)
        
        i = j = j + 1
    
    return res


            

print(longestSubarray